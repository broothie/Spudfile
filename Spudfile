
def bump(version, segment = :patch)
  major, minor, patch = version.split('.')

  case segment.to_sym
  when :major then [major.to_i + 1, minor, patch].join('.')
  when :minor then [major, minor.to_i + 1, patch].join('.')
  else             [major, minor, patch.to_i + 1].join('.')
  end
end

def gem(version)
  "spud-#{version}.gem"
end

rb = '**/*.rb'
gemspec = 'spud.gemspec'

# Build
publish do |version|
  invoke :local, version
  invoke :push, version
  invoke :clean
end

local do |version|
  invoke :build
  invoke :install, version
end

build [rb, gemspec] => '*.gem' do
  sh 'gem build', gemspec
end

install [rb, gemspec] => `which spud` do |version|
  sh 'gem install', gem(version)
end

push do |version|
  sh 'gem push', gem(version)
end

clean do
  sh? 'rm -rf spud-*.gem'
end

# Version
version do
  shh "grep VERSION lib/version.rb | sed -e 's/[^0-9\.]//g'"
end

bump_version do |seg = :patch|
  version = shhh "grep VERSION lib/version.rb | sed -e 's/[^0-9\.]//g'"

  File.write 'lib/version.rb', <<-ruby
module Spud
  VERSION = '#{bump(version, seg)}'
end
ruby
end

# Git
git do |message|
  invoke :clean
  sh 'git add -A'
  sh 'git commit -m', message
  sh 'git push'
end

# Sandbox
bin do |*args|
  sh 'ruby -I lib bin/spud', *args
end

echo do |first, second = '2', third: '3'|
  sh 'echo', first, second, third
end
