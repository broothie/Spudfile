
def vbump(version, segment = 'patch')
  major, minor, patch = version.split('.')

  case segment
  when 'major' then [major.to_i + 1, minor, patch].join('.')
  when 'minor' then [major, minor.to_i + 1, patch].join('.')
  else              [major, minor, patch.to_i + 1].join('.')
  end
end

def dotgem(version)
  "spud-#{version}.gem"
end

def get_version
  `spud -v`.chomp
end

rb = '**/*.rb'
gemspec = 'spud.gemspec'

# Build
publish do |version = get_version|
  invoke :local, version
  invoke :push, version
  invoke :clean
end

local do |version = get_version|
  invoke :build
  invoke :install, version
end

build [rb, gemspec] => '*.gem' do
  sh 'gem build', gemspec
end

install [rb, gemspec] => `which spud` do |version|
  sh 'gem install', dotgem(version)
end

push do |version = get_version|
  sh 'gem push', dotgem(version)
end

clean do
  rm '-rf filename'
end

# Version
version do
  cat 'lib/version.rb'
end

bump do |seg = 'patch'|
  version = grep 'VERSION lib/version.rb | sed -e \'s/[^0-9.]//g\''

  File.write 'lib/version.rb', <<-ruby
    module Spud
      VERSION = '#{vbump(version, seg)}'
    end
  ruby
end

# Git
git do |message|
  invoke :clean
  git 'add -A'
  git 'commit -m', q(message)
  git 'push'
end

# Sandbox
bin do |*args|
  ruby '-I lib bin/spud', *args
end

echo do |first, second = '2', third: '3'|
  echo first, second, third
end

gen do
  touch 'filename'
end
